{"version":3,"sources":["services/names.js","components/Form.js","components/Persons.js","components/Search.js","components/Notification.js","App.js","index.js"],"names":["baseUrl","axios","get","then","response","data","newObject","post","changedObject","put","id","deleteObject","delete","Form","newName","setNewName","newNumber","setNewNumber","addName","value","onChange","event","target","type","onClick","Persons","displayNames","Search","newSearch","setNewSearch","Notification","message","messageType","style","color","backgroundColor","margin","textAlign","fontSize","App","useState","persons","setPersons","errorMessage","setErrorMessage","setMessageType","useEffect","nameService","initialNames","checkNames","i","length","toLowerCase","name","preventDefault","nameObject","number","returnedName","concat","setTimeout","catch","error","window","confirm","selectedPerson","find","person","newNameObject","map","key","n","filter","deleteName","included","includes","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.b2577e53.chunk.js","sourcesContent":["import axios from 'axios'\nconst baseUrl = '/api/persons/'\n\nconst getAll = () => {\n  const request = axios.get(baseUrl)\n  return request.then(response => response.data)\n}\n\nconst create = newObject => {\n  const request = axios.post(baseUrl, newObject)\n  return request.then(response => response.data)\n}\n\nconst update = changedObject => {\n  const request = axios.put(baseUrl + changedObject.id, changedObject)\n  return request.then(response => response.data)\n}\n\nconst remove = deleteObject => {\n  const request = axios.delete(baseUrl + deleteObject)\n  return request.then(response => response.data)\n}\n\nexport default {\n  getAll, create, update, remove\n}\n","import React from 'react'\n\nconst Form = ( {newName, setNewName, newNumber, setNewNumber, addName}) => {\n\n  const handleNameChange = (event) => {\n    setNewName(event.target.value)\n  }\n\n  const handleNumberChange = (event) => {\n    setNewNumber(event.target.value)\n  }\n\n  return (\n    <form>\n      <div>\n        name: <input value={newName} onChange={handleNameChange}/>\n      </div>\n      <div>\n        number: <input value={newNumber} onChange={handleNumberChange}/>\n      <div/>\n        <button type=\"submit\" onClick={addName}>add</button>\n      </div>\n    </form>\n  )\n}\n\nexport default Form\n","import React from 'react'\n\nconst Persons = ( {displayNames} ) => {\n  return (\n    <ul>\n      {displayNames()}\n    </ul>\n  )\n}\n\nexport default Persons\n","import React from 'react'\n\nconst Search = ( {newSearch, setNewSearch} ) => {\n  const handleSearch = (event) => {\n    setNewSearch(event.target.value)\n  }\n\n  return (\n    <form>\n      <div>\n        Search: <input value={newSearch} onChange={handleSearch}/>\n      </div>\n    </form>\n  )\n}\n\nexport default Search\n","import React from 'react'\n\nconst Notification = ({message, messageType}) => {\n  if (message === null) {return null}\n\n  const errorStyle = {\n    color: 'white',\n    backgroundColor: 'red',\n    margin: '10px',\n    textAlign: 'center',\n    fontSize: '26px'\n  }\n  const successStyle = {\n    color: 'white',\n    backgroundColor: 'green',\n    margin: '10px',\n    textAlign: 'center',\n    fontSize: '26px'\n  }\n\n  if (messageType === 'success') {\n    return (\n    <div style={successStyle}>\n      {message}\n    </div>\n    )\n  }\n  else {\n    return (\n    <div style={errorStyle}>\n      {message}\n    </div>\n    )\n  }\n}\n\nexport default Notification\n","import React, { useState, useEffect } from 'react'\nimport nameService from './services/names'\nimport Form from './components/Form'\nimport Persons from './components/Persons'\nimport Search from './components/Search'\nimport Notification from './components/Notification'\n\n\nconst App = () => {\n  const [ persons, setPersons] = useState([])\n  const [ newName, setNewName ] = useState('')\n  const [ newNumber, setNewNumber ] = useState('')\n  const [ newSearch, setNewSearch ] = useState('')\n  const [ errorMessage, setErrorMessage ] = useState(null)\n  const [ messageType, setMessageType ] = useState(null)\n\n  useEffect(() => {\n    nameService\n      .getAll()\n      .then(initialNames => {\n        setPersons(initialNames)\n      })\n  }, [])\n\n  const addName = (event) => {\n    event.preventDefault()\n    const nameObject = {\n      name: newName,\n      number: newNumber\n    }\n    if (checkNames() === true) {\n      nameService\n        .create(nameObject)\n        .then(returnedName => {\n          setPersons(persons.concat(returnedName))\n          setMessageType('success')\n          setErrorMessage(`${newName} was added to the phonebook.`)\n          setNewName('')\n          setNewNumber('')\n          setTimeout(() => {\n            setErrorMessage(null)\n            setMessageType(null)\n          }, 2000)\n        })\n        .catch(error => {\n          setMessageType('error')\n          setErrorMessage(error.message)\n          setTimeout(() => {\n            setErrorMessage(null)\n            setMessageType(null)\n          }, 2000)\n        })\n      }\n    else {\n      const result = window.confirm(`\"${nameObject.name}\" is already in the phonebook. Replace the old number with a new one?`)\n      if (result) {\n        // find the person object with a name that matches the inputted one\n        const selectedPerson = persons.find(person => person.name.toLowerCase() === newName.toLowerCase())\n        // create a new object using the new number but old ID\n        const newNameObject = {\n          name: nameObject.name,\n          number: newNumber,\n          id: selectedPerson.id\n        }\n        nameService\n          .update(newNameObject)\n          .then(returnedName => {\n            setPersons(persons.map(person => person.id !== newNameObject.id ? person: returnedName))\n            setMessageType('success')\n            setErrorMessage(`${newName} was updated.`)\n            setNewName('')\n            setNewNumber('')\n            setTimeout(() => {\n              setErrorMessage(null)\n              setMessageType(null)\n            }, 2000)\n          })\n          .catch(error => {\n            setErrorMessage(`${newName} was already removed from server.`)\n            setTimeout(() => {\n              setErrorMessage(null)\n            }, 2000)\n          })\n      }\n    }\n  }\n\n  const checkNames = () => {\n    for (let i =0; i < persons.length; i++) {\n      if (newName.toLowerCase() === persons[i].name.toLowerCase()) {\n        return false\n      }\n    }\n    return true\n  }\n\n  const deleteName = id => {\n    const deleteObject = persons.find(n => n.id === id).id\n    nameService\n      .remove(deleteObject)\n      .then(deleteObject => {\n        setPersons(persons.filter(n => n.id !== id))\n        setErrorMessage(`A name was deleted.`)\n        setMessageType('success')\n        setTimeout(() => {\n          setErrorMessage(null)\n          setMessageType(null)\n        }, 2000)\n      })\n  }\n\n  const displayNames = () => {\n    if (newSearch === \"\") {\n       return persons.map( person => <li key={person.id}>{person.name}: {person.number} <button onClick={ () => deleteName(person.id)}>Delete</button></li>)\n    }\n    for (let i =0; i < persons.length; i++) {\n      const included = persons[i].name.toLowerCase().includes(newSearch)\n      if (persons[i].name.toLowerCase().includes(newSearch) === true && included ) {\n        return persons\n                  .filter( (person) => person.name.toLowerCase().includes(newSearch) )\n                  .map( person => <li key={person.id}>{person.name}: {person.number}</li> )\n      }\n    }\n    return <li>No such name in the phonebook</li>\n  }\n\n\n\n  return (\n    <div>\n      <h1>Phonebook</h1>\n      <Search\n        newSearch={newSearch}\n        setNewSearch={setNewSearch}\n      />\n      <h2>Add an entry</h2>\n      <Notification message={errorMessage} messageType={messageType} />\n      <Form\n        checkNames={checkNames}\n        newName={newName}\n        setNewName={setNewName}\n        addName={addName}\n        newNumber={newNumber}\n        setNewNumber={setNewNumber}\n      />\n      <h2>Numbers</h2>\n      <Persons displayNames={displayNames}/>\n    </div>\n  )\n}\n\nexport default App\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n"],"sourceRoot":""}