{"ast":null,"code":"var _jsxFileName = \"/Users/danielgawne/Documents/projects/fullstackopen/part5/src/components/Togglable.js\";\nimport React from \"react\";\nimport Button from \"@material-ui/core/Button\";\n\nconst Togglable = props => {\n  const hideWhenVisible = {\n    display: props.visible ? \"none\" : \"\"\n  };\n  const showWhenVisible = {\n    display: props.visible ? \"\" : \"none\"\n  };\n\n  const toggleVisibility = () => {\n    props.setVisible(!props.visible);\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    style: hideWhenVisible,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    variant: \"contained\",\n    onClick: toggleVisibility,\n    color: \"default\",\n    type: \"submit\",\n    style: {\n      marginTop: 10\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 9\n    }\n  }, props.buttonLabel)), /*#__PURE__*/React.createElement(\"div\", {\n    style: showWhenVisible,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }\n  }, props.children, /*#__PURE__*/React.createElement(Button, {\n    variant: \"contained\",\n    onClick: toggleVisibility,\n    color: \"default\",\n    style: {\n      marginTop: 10\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 9\n    }\n  }, \"Cancel\")));\n};\n\nexport default Togglable;","map":{"version":3,"sources":["/Users/danielgawne/Documents/projects/fullstackopen/part5/src/components/Togglable.js"],"names":["React","Button","Togglable","props","hideWhenVisible","display","visible","showWhenVisible","toggleVisibility","setVisible","marginTop","buttonLabel","children"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,0BAAnB;;AAEA,MAAMC,SAAS,GAAIC,KAAD,IAAW;AAC3B,QAAMC,eAAe,GAAG;AAAEC,IAAAA,OAAO,EAAEF,KAAK,CAACG,OAAN,GAAgB,MAAhB,GAAyB;AAApC,GAAxB;AACA,QAAMC,eAAe,GAAG;AAAEF,IAAAA,OAAO,EAAEF,KAAK,CAACG,OAAN,GAAgB,EAAhB,GAAqB;AAAhC,GAAxB;;AAEA,QAAME,gBAAgB,GAAG,MAAM;AAC7BL,IAAAA,KAAK,CAACM,UAAN,CAAiB,CAACN,KAAK,CAACG,OAAxB;AACD,GAFD;;AAIA,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,KAAK,EAAEF,eAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,MAAD;AACE,IAAA,OAAO,EAAC,WADV;AAEE,IAAA,OAAO,EAAEI,gBAFX;AAGE,IAAA,KAAK,EAAC,SAHR;AAIE,IAAA,IAAI,EAAC,QAJP;AAKE,IAAA,KAAK,EAAE;AAAEE,MAAAA,SAAS,EAAE;AAAb,KALT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAOGP,KAAK,CAACQ,WAPT,CADF,CADF,eAYE;AAAK,IAAA,KAAK,EAAEJ,eAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGJ,KAAK,CAACS,QADT,eAEE,oBAAC,MAAD;AACE,IAAA,OAAO,EAAC,WADV;AAEE,IAAA,OAAO,EAAEJ,gBAFX;AAGE,IAAA,KAAK,EAAC,SAHR;AAIE,IAAA,KAAK,EAAE;AAAEE,MAAAA,SAAS,EAAE;AAAb,KAJT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF,CAZF,CADF;AA0BD,CAlCD;;AAoCA,eAAeR,SAAf","sourcesContent":["import React from \"react\";\nimport Button from \"@material-ui/core/Button\";\n\nconst Togglable = (props) => {\n  const hideWhenVisible = { display: props.visible ? \"none\" : \"\" };\n  const showWhenVisible = { display: props.visible ? \"\" : \"none\" };\n\n  const toggleVisibility = () => {\n    props.setVisible(!props.visible);\n  };\n\n  return (\n    <div>\n      <div style={hideWhenVisible}>\n        <Button\n          variant=\"contained\"\n          onClick={toggleVisibility}\n          color=\"default\"\n          type=\"submit\"\n          style={{ marginTop: 10 }}\n        >\n          {props.buttonLabel}\n        </Button>\n      </div>\n      <div style={showWhenVisible}>\n        {props.children}\n        <Button\n          variant=\"contained\"\n          onClick={toggleVisibility}\n          color=\"default\"\n          style={{ marginTop: 10 }}\n        >\n          Cancel\n        </Button>\n      </div>\n    </div>\n  );\n};\n\nexport default Togglable;\n"]},"metadata":{},"sourceType":"module"}