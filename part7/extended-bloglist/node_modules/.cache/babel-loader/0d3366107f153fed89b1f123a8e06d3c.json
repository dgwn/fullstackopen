{"ast":null,"code":"var _jsxFileName = \"/Users/danielgawne/Documents/projects/fullstackopen/part5/src/App.js\";\n// Core\nimport React, { useState, useEffect, useRef } from \"react\";\nimport \"./App.css\"; // Components\n\nimport Login from \"./components/Login\";\nimport Blog from \"./components/Blog\";\nimport Notification from \"./components/Notification\";\nimport BlogForm from \"./components/BlogForm\"; // import BlogTable from \"./components/BlogTable\";\n\nimport Togglable from \"./components/Togglable\"; // Services\n\nimport blogService from \"./services/blogs\";\nimport loginService from \"./services/login\"; // Material-UI\n\nimport Grid from \"@material-ui/core/Grid\";\nimport Button from \"@material-ui/core/Button\";\n\nconst App = () => {\n  const [blogs, setBlogs] = useState([]);\n  const [username, setUsername] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [user, setUser] = useState(null);\n  const [notification, setNotification] = useState(null); // const [visible, setVisible] = useState(false);\n\n  useEffect(() => {\n    blogService.getAll().then(blogs => setBlogs(blogs));\n  }, []); // rerender blog list whenever the URL field changes, i.e. when the gield is reset on submit\n\n  useEffect(() => {\n    blogService.getAll().then(blogs => setBlogs(blogs));\n  }, [notification]);\n  useEffect(() => {\n    const loggedUserJSON = window.localStorage.getItem(\"loggedBlogAppUser\");\n\n    if (loggedUserJSON) {\n      const user = JSON.parse(loggedUserJSON);\n      setUser(user);\n      blogService.setToken(user.token);\n    }\n  }, []);\n\n  const handleLogin = async event => {\n    event.preventDefault();\n\n    try {\n      const user = await loginService.login({\n        username,\n        password\n      });\n      window.localStorage.setItem(\"loggedBlogAppUser\", JSON.stringify(user));\n      blogService.setToken(user.token);\n      setUser(user);\n      setNotification(\"Logged In\");\n      setTimeout(() => {\n        setNotification(null);\n      }, 5000);\n      setUsername(\"\");\n      setPassword(\"\");\n    } catch (exception) {\n      setNotification(\"Wrong credentials\");\n      setTimeout(() => {\n        setNotification(null);\n      }, 5000);\n    }\n  };\n\n  const handleLogout = async event => {\n    event.preventDefault();\n\n    try {\n      window.localStorage.removeItem(\"loggedBlogAppUser\");\n      setUser(null);\n      setUsername(\"\");\n      setPassword(\"\");\n    } catch (exception) {}\n  };\n\n  const addBlog = async blogObject => {\n    // event.preventDefault();\n    try {\n      // const blogObject = {\n      //   title: newTitle,\n      //   author: newAuthor,\n      //   url: newUrl\n      // };\n      blogFormRef.current.toggleVisibility();\n      const newBlog = await blogService.create(blogObject);\n      setBlogs([...blogs, newBlog]);\n      setNotification(`\"${blogObject.title}\" has been added`);\n      setTimeout(() => {\n        setNotification(null);\n      }, 5000); // setNewTitle(\"\");\n      // setNewAuthor(\"\");\n      // setNewUrl(\"http://\");\n      // setVisible(false);\n    } catch (exception) {\n      setNotification(\"Error posting blog\");\n      setTimeout(() => {\n        setNotification(null);\n      }, 5000);\n    }\n  };\n\n  const updateLikes = async blog => {\n    setNotification(null);\n    const newLikes = await blogService.patch(blog.id, blog.likes + 1);\n    console.log(newLikes);\n    setNotification(`\"${blog.title}\" has been updated`);\n    setTimeout(() => {\n      setNotification(null);\n    }, 5000);\n  };\n\n  const welcomeUser = () => /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 5\n    }\n  }, \"Welcome \", user.name, /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: handleLogout,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    variant: \"outlined\",\n    color: \"secondary\",\n    type: \"submit\",\n    style: {\n      marginTop: 10\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 9\n    }\n  }, \"Logout\")), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 7\n    }\n  }));\n\n  const blogList = () => /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 5\n    }\n  }, blogs.map(blog => /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      border: \"1px solid black\",\n      marginBottom: \".5rem\",\n      padding: \"1rem\",\n      width: \"20rem\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Blog, {\n    key: blog.id,\n    blog: blog,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(Togglable, {\n    buttonLabel: \"View\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 11\n    }\n  }, blog.url, /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 13\n    }\n  }), \"likes: \", blog.likes, /*#__PURE__*/React.createElement(Button, {\n    variant: \"outlined\",\n    color: \"primary\",\n    style: {\n      marginLeft: \".5rem\"\n    },\n    onClick: () => updateLikes(blog),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 13\n    }\n  }, \"Like\"), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 13\n    }\n  }), blog.user !== undefined && blog.user.name, /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 13\n    }\n  })))));\n\n  const blogFormRef = useRef();\n  return /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 179,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 4,\n    style: {\n      textAlign: \"center\",\n      padding: 20\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 180,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 181,\n      columnNumber: 9\n    }\n  }, \"Blogs\"), notification !== null && /*#__PURE__*/React.createElement(Notification, {\n    notification: notification,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 182,\n      columnNumber: 35\n    }\n  }), user === null && /*#__PURE__*/React.createElement(Login, {\n    handleLogin: handleLogin,\n    username: username,\n    setUsername: setUsername,\n    password: password,\n    setPassword: setPassword,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 185,\n      columnNumber: 11\n    }\n  }), user !== null && welcomeUser(), user !== null && /*#__PURE__*/React.createElement(Togglable, {\n    buttonLabel: \"Post Blog\",\n    ref: blogFormRef,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 195,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(BlogForm, {\n    createBlog: addBlog,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 196,\n      columnNumber: 13\n    }\n  }))), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 8,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 200,\n      columnNumber: 7\n    }\n  }, user !== null && blogList()));\n};\n\nexport default App;","map":{"version":3,"sources":["/Users/danielgawne/Documents/projects/fullstackopen/part5/src/App.js"],"names":["React","useState","useEffect","useRef","Login","Blog","Notification","BlogForm","Togglable","blogService","loginService","Grid","Button","App","blogs","setBlogs","username","setUsername","password","setPassword","user","setUser","notification","setNotification","getAll","then","loggedUserJSON","window","localStorage","getItem","JSON","parse","setToken","token","handleLogin","event","preventDefault","login","setItem","stringify","setTimeout","exception","handleLogout","removeItem","addBlog","blogObject","blogFormRef","current","toggleVisibility","newBlog","create","title","updateLikes","blog","newLikes","patch","id","likes","console","log","welcomeUser","name","marginTop","blogList","map","border","marginBottom","padding","width","url","marginLeft","undefined","textAlign"],"mappings":"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","sourcesContent":["// Core\nimport React, { useState, useEffect, useRef } from \"react\";\nimport \"./App.css\";\n\n// Components\nimport Login from \"./components/Login\";\nimport Blog from \"./components/Blog\";\nimport Notification from \"./components/Notification\";\nimport BlogForm from \"./components/BlogForm\";\n// import BlogTable from \"./components/BlogTable\";\nimport Togglable from \"./components/Togglable\";\n\n// Services\nimport blogService from \"./services/blogs\";\nimport loginService from \"./services/login\";\n\n// Material-UI\nimport Grid from \"@material-ui/core/Grid\";\nimport Button from \"@material-ui/core/Button\";\n\nconst App = () => {\n  const [blogs, setBlogs] = useState([]);\n  const [username, setUsername] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [user, setUser] = useState(null);\n\n  const [notification, setNotification] = useState(null);\n\n  // const [visible, setVisible] = useState(false);\n\n  useEffect(() => {\n    blogService.getAll().then((blogs) => setBlogs(blogs));\n  }, []);\n\n  // rerender blog list whenever the URL field changes, i.e. when the gield is reset on submit\n  useEffect(() => {\n    blogService.getAll().then((blogs) => setBlogs(blogs));\n  }, [notification]);\n\n  useEffect(() => {\n    const loggedUserJSON = window.localStorage.getItem(\"loggedBlogAppUser\");\n    if (loggedUserJSON) {\n      const user = JSON.parse(loggedUserJSON);\n      setUser(user);\n      blogService.setToken(user.token);\n    }\n  }, []);\n\n  const handleLogin = async (event) => {\n    event.preventDefault();\n    try {\n      const user = await loginService.login({\n        username,\n        password\n      });\n\n      window.localStorage.setItem(\"loggedBlogAppUser\", JSON.stringify(user));\n\n      blogService.setToken(user.token);\n      setUser(user);\n      setNotification(\"Logged In\");\n      setTimeout(() => {\n        setNotification(null);\n      }, 5000);\n\n      setUsername(\"\");\n      setPassword(\"\");\n    } catch (exception) {\n      setNotification(\"Wrong credentials\");\n      setTimeout(() => {\n        setNotification(null);\n      }, 5000);\n    }\n  };\n\n  const handleLogout = async (event) => {\n    event.preventDefault();\n    try {\n      window.localStorage.removeItem(\"loggedBlogAppUser\");\n      setUser(null);\n      setUsername(\"\");\n      setPassword(\"\");\n    } catch (exception) {}\n  };\n\n  const addBlog = async (blogObject) => {\n    // event.preventDefault();\n    try {\n      // const blogObject = {\n      //   title: newTitle,\n      //   author: newAuthor,\n      //   url: newUrl\n      // };\n      blogFormRef.current.toggleVisibility();\n      const newBlog = await blogService.create(blogObject);\n      setBlogs([...blogs, newBlog]);\n      setNotification(`\"${blogObject.title}\" has been added`);\n      setTimeout(() => {\n        setNotification(null);\n      }, 5000);\n\n      // setNewTitle(\"\");\n      // setNewAuthor(\"\");\n      // setNewUrl(\"http://\");\n      // setVisible(false);\n    } catch (exception) {\n      setNotification(\"Error posting blog\");\n      setTimeout(() => {\n        setNotification(null);\n      }, 5000);\n    }\n  };\n\n  const updateLikes = async (blog) => {\n    setNotification(null);\n    const newLikes = await blogService.patch(blog.id, blog.likes + 1);\n    console.log(newLikes);\n\n    setNotification(`\"${blog.title}\" has been updated`);\n    setTimeout(() => {\n      setNotification(null);\n    }, 5000);\n  };\n\n  const welcomeUser = () => (\n    <div>\n      Welcome {user.name}\n      <form onSubmit={handleLogout}>\n        <Button\n          variant=\"outlined\"\n          color=\"secondary\"\n          type=\"submit\"\n          style={{ marginTop: 10 }}\n        >\n          Logout\n        </Button>\n      </form>\n      <br />\n    </div>\n  );\n\n  const blogList = () => (\n    <div>\n      {blogs.map((blog) => (\n        <div\n          style={{\n            border: \"1px solid black\",\n            marginBottom: \".5rem\",\n            padding: \"1rem\",\n            width: \"20rem\"\n          }}\n        >\n          <Blog key={blog.id} blog={blog} />\n          <Togglable buttonLabel=\"View\">\n            {blog.url}\n            <br />\n            likes: {blog.likes}\n            <Button\n              variant=\"outlined\"\n              color=\"primary\"\n              style={{ marginLeft: \".5rem\" }}\n              onClick={() => updateLikes(blog)}\n            >\n              Like\n            </Button>\n            <br />\n            {/* blog.user.name must be expressed after result of a conditional, otherwise  blog details try to render before post request goes through*/}\n            {blog.user !== undefined && blog.user.name}\n            <br />\n          </Togglable>\n        </div>\n      ))}\n    </div>\n  );\n\n  const blogFormRef = useRef();\n\n  return (\n    <Grid container>\n      <Grid item xs={4} style={{ textAlign: \"center\", padding: 20 }}>\n        <h2>Blogs</h2>\n        {notification !== null && <Notification notification={notification} />}\n\n        {user === null && (\n          <Login\n            handleLogin={handleLogin}\n            username={username}\n            setUsername={setUsername}\n            password={password}\n            setPassword={setPassword}\n          />\n        )}\n        {user !== null && welcomeUser()}\n        {user !== null && (\n          <Togglable buttonLabel=\"Post Blog\" ref={blogFormRef}>\n            <BlogForm createBlog={addBlog} />\n          </Togglable>\n        )}\n      </Grid>\n      <Grid item xs={8}>\n        {user !== null && blogList()}\n        {/* {user !== null && <BlogTable blogs={blogs} />} */}\n      </Grid>\n    </Grid>\n  );\n};\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}