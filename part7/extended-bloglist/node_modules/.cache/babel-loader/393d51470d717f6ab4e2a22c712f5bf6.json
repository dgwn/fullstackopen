{"ast":null,"code":"import axios from \"axios\";\nconst baseUrl = \"/api/blogs\";\nlet token = null;\n\nconst setToken = newToken => {\n  token = `bearer ${newToken}`;\n};\n\nconst getAll = () => {\n  const request = axios.get(baseUrl);\n  return request.then(response => response.data);\n};\n\nconst create = async newObject => {\n  const config = {\n    headers: {\n      Authorization: token\n    }\n  };\n  const response = await axios.post(baseUrl, newObject, config);\n  return response.data;\n};\n\nconst patch = async (blogToUpdate, likes) => {\n  const newLikes = {\n    likes: likes\n  };\n  const response = await axios.patch(baseUrl + \"/\" + blogToUpdate, newLikes);\n  return response.data;\n};\n\nconst remove = async blogToDelete => {\n  const config = {\n    headers: {\n      Authorization: token\n    }\n  };\n  const response = await axios.delete(baseUrl + \"/\" + blogToDelete, config);\n  return response.data;\n};\n\nexport default {\n  getAll,\n  create,\n  patch,\n  remove,\n  setToken\n};","map":{"version":3,"sources":["/Users/danielgawne/Documents/projects/fullstackopen/part5/src/services/blogs.js"],"names":["axios","baseUrl","token","setToken","newToken","getAll","request","get","then","response","data","create","newObject","config","headers","Authorization","post","patch","blogToUpdate","likes","newLikes","remove","blogToDelete","delete"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,MAAMC,OAAO,GAAG,YAAhB;AAEA,IAAIC,KAAK,GAAG,IAAZ;;AACA,MAAMC,QAAQ,GAAIC,QAAD,IAAc;AAC7BF,EAAAA,KAAK,GAAI,UAASE,QAAS,EAA3B;AACD,CAFD;;AAIA,MAAMC,MAAM,GAAG,MAAM;AACnB,QAAMC,OAAO,GAAGN,KAAK,CAACO,GAAN,CAAUN,OAAV,CAAhB;AACA,SAAOK,OAAO,CAACE,IAAR,CAAcC,QAAD,IAAcA,QAAQ,CAACC,IAApC,CAAP;AACD,CAHD;;AAKA,MAAMC,MAAM,GAAG,MAAOC,SAAP,IAAqB;AAClC,QAAMC,MAAM,GAAG;AACbC,IAAAA,OAAO,EAAE;AAAEC,MAAAA,aAAa,EAAEb;AAAjB;AADI,GAAf;AAGA,QAAMO,QAAQ,GAAG,MAAMT,KAAK,CAACgB,IAAN,CAAWf,OAAX,EAAoBW,SAApB,EAA+BC,MAA/B,CAAvB;AACA,SAAOJ,QAAQ,CAACC,IAAhB;AACD,CAND;;AAQA,MAAMO,KAAK,GAAG,OAAOC,YAAP,EAAqBC,KAArB,KAA+B;AAC3C,QAAMC,QAAQ,GAAG;AACfD,IAAAA,KAAK,EAAEA;AADQ,GAAjB;AAIA,QAAMV,QAAQ,GAAG,MAAMT,KAAK,CAACiB,KAAN,CAAYhB,OAAO,GAAG,GAAV,GAAgBiB,YAA5B,EAA0CE,QAA1C,CAAvB;AACA,SAAOX,QAAQ,CAACC,IAAhB;AACD,CAPD;;AASA,MAAMW,MAAM,GAAG,MAAOC,YAAP,IAAwB;AACrC,QAAMT,MAAM,GAAG;AACbC,IAAAA,OAAO,EAAE;AAAEC,MAAAA,aAAa,EAAEb;AAAjB;AADI,GAAf;AAGA,QAAMO,QAAQ,GAAG,MAAMT,KAAK,CAACuB,MAAN,CAAatB,OAAO,GAAG,GAAV,GAAgBqB,YAA7B,EAA2CT,MAA3C,CAAvB;AACA,SAAOJ,QAAQ,CAACC,IAAhB;AACD,CAND;;AAQA,eAAe;AAAEL,EAAAA,MAAF;AAAUM,EAAAA,MAAV;AAAkBM,EAAAA,KAAlB;AAAyBI,EAAAA,MAAzB;AAAiClB,EAAAA;AAAjC,CAAf","sourcesContent":["import axios from \"axios\"\nconst baseUrl = \"/api/blogs\"\n\nlet token = null\nconst setToken = (newToken) => {\n  token = `bearer ${newToken}`\n}\n\nconst getAll = () => {\n  const request = axios.get(baseUrl)\n  return request.then((response) => response.data)\n}\n\nconst create = async (newObject) => {\n  const config = {\n    headers: { Authorization: token }\n  }\n  const response = await axios.post(baseUrl, newObject, config)\n  return response.data\n}\n\nconst patch = async (blogToUpdate, likes) => {\n  const newLikes = {\n    likes: likes\n  }\n\n  const response = await axios.patch(baseUrl + \"/\" + blogToUpdate, newLikes)\n  return response.data\n}\n\nconst remove = async (blogToDelete) => {\n  const config = {\n    headers: { Authorization: token }\n  }\n  const response = await axios.delete(baseUrl + \"/\" + blogToDelete, config)\n  return response.data\n}\n\nexport default { getAll, create, patch, remove, setToken }\n"]},"metadata":{},"sourceType":"module"}