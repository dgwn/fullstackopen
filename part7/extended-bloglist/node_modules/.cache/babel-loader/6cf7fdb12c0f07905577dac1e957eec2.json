{"ast":null,"code":"var _jsxFileName = \"/Users/danielgawne/Documents/projects/fullstackopen/part5/src/App.js\";\n// Core\nimport React, { useState, useEffect } from \"react\";\nimport \"./App.css\"; // Components\n\nimport Login from \"./components/Login\";\nimport Blog from \"./components/Blog\";\nimport Notification from \"./components/Notification\";\nimport BlogForm from \"./components/BlogForm\"; // import BlogTable from \"./components/BlogTable\";\n\nimport Togglable from \"./components/Togglable\"; // Services\n\nimport blogService from \"./services/blogs\";\nimport loginService from \"./services/login\"; // Material-UI\n\nimport Grid from \"@material-ui/core/Grid\";\nimport Button from \"@material-ui/core/Button\";\n\nconst App = () => {\n  const [blogs, setBlogs] = useState([]);\n  const [username, setUsername] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [user, setUser] = useState(null);\n  const [notification, setNotification] = useState(null); // const [newTitle, setNewTitle] = useState(\"\");\n  // const [newAuthor, setNewAuthor] = useState(\"\");\n  // const [newUrl, setNewUrl] = useState(\"http://\");\n\n  const [visible, setVisible] = useState(false);\n  useEffect(() => {\n    blogService.getAll().then(blogs => setBlogs(blogs));\n  }, []); // rerender blog list whenever the URL field changes, i.e. when the gield is reset on submit\n\n  useEffect(() => {\n    blogService.getAll().then(blogs => setBlogs(blogs));\n  }, [notification]);\n  useEffect(() => {\n    const loggedUserJSON = window.localStorage.getItem(\"loggedBlogAppUser\");\n\n    if (loggedUserJSON) {\n      const user = JSON.parse(loggedUserJSON);\n      setUser(user);\n      blogService.setToken(user.token);\n    }\n  }, []);\n\n  const handleLogin = async event => {\n    event.preventDefault();\n\n    try {\n      const user = await loginService.login({\n        username,\n        password\n      });\n      window.localStorage.setItem(\"loggedBlogAppUser\", JSON.stringify(user));\n      blogService.setToken(user.token);\n      setUser(user);\n      setNotification(\"Logged In\");\n      setTimeout(() => {\n        setNotification(null);\n      }, 5000);\n      setUsername(\"\");\n      setPassword(\"\");\n    } catch (exception) {\n      setNotification(\"Wrong credentials\");\n      setTimeout(() => {\n        setNotification(null);\n      }, 5000);\n    }\n  };\n\n  const handleLogout = async event => {\n    event.preventDefault();\n\n    try {\n      window.localStorage.removeItem(\"loggedBlogAppUser\");\n      setUser(null);\n      setUsername(\"\");\n      setPassword(\"\");\n    } catch (exception) {}\n  };\n\n  const addBlog = async blogObject => {\n    // event.preventDefault();\n    try {\n      // const blogObject = {\n      //   title: newTitle,\n      //   author: newAuthor,\n      //   url: newUrl\n      // };\n      const newBlog = await blogService.create(blogObject);\n      setBlogs([...blogs, newBlog]);\n      setNotification(`\"${blogObject.title}\" has been added`);\n      setTimeout(() => {\n        setNotification(null);\n      }, 5000); // setNewTitle(\"\");\n      // setNewAuthor(\"\");\n      // setNewUrl(\"http://\");\n      // setVisible(false);\n    } catch (exception) {\n      setNotification(\"Error posting blog\");\n      setTimeout(() => {\n        setNotification(null);\n      }, 5000);\n    }\n  };\n\n  const welcomeUser = () => /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 5\n    }\n  }, \"Welcome \", user.name, /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: handleLogout,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    variant: \"outlined\",\n    color: \"secondary\",\n    type: \"submit\",\n    style: {\n      marginTop: 10\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 9\n    }\n  }, \"Logout\")), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 7\n    }\n  }));\n\n  const blogList = () => /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 5\n    }\n  }, blogs.map(blog => /*#__PURE__*/React.createElement(Blog, {\n    key: blog.id,\n    blog: blog,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 9\n    }\n  })));\n\n  return /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 4,\n    style: {\n      textAlign: \"center\",\n      padding: 20\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 9\n    }\n  }, \"Blogs\"), notification !== null && /*#__PURE__*/React.createElement(Notification, {\n    notification: notification,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 35\n    }\n  }), user === null && /*#__PURE__*/React.createElement(Login, {\n    handleLogin: handleLogin,\n    username: username,\n    setUsername: setUsername,\n    password: password,\n    setPassword: setPassword,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 11\n    }\n  }), user !== null && welcomeUser(), user !== null && /*#__PURE__*/React.createElement(Togglable, {\n    buttonLabel: \"Post Blog\",\n    visible: visible,\n    setVisible: setVisible,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(BlogForm, {\n    createBlog: addBlog // newTitle={newTitle}\n    // setNewTitle={setNewTitle}\n    // newAuthor={newAuthor}\n    // setNewAuthor={setNewAuthor}\n    // newUrl={newUrl}\n    // setNewUrl={setNewUrl}\n    ,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 13\n    }\n  }))), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 8,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 7\n    }\n  }, blogList()));\n};\n\nexport default App;","map":{"version":3,"sources":["/Users/danielgawne/Documents/projects/fullstackopen/part5/src/App.js"],"names":["React","useState","useEffect","Login","Blog","Notification","BlogForm","Togglable","blogService","loginService","Grid","Button","App","blogs","setBlogs","username","setUsername","password","setPassword","user","setUser","notification","setNotification","visible","setVisible","getAll","then","loggedUserJSON","window","localStorage","getItem","JSON","parse","setToken","token","handleLogin","event","preventDefault","login","setItem","stringify","setTimeout","exception","handleLogout","removeItem","addBlog","blogObject","newBlog","create","title","welcomeUser","name","marginTop","blogList","map","blog","id","textAlign","padding"],"mappings":"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","sourcesContent":["// Core\nimport React, { useState, useEffect } from \"react\";\nimport \"./App.css\";\n\n// Components\nimport Login from \"./components/Login\";\nimport Blog from \"./components/Blog\";\nimport Notification from \"./components/Notification\";\nimport BlogForm from \"./components/BlogForm\";\n// import BlogTable from \"./components/BlogTable\";\nimport Togglable from \"./components/Togglable\";\n\n// Services\nimport blogService from \"./services/blogs\";\nimport loginService from \"./services/login\";\n\n// Material-UI\nimport Grid from \"@material-ui/core/Grid\";\nimport Button from \"@material-ui/core/Button\";\n\nconst App = () => {\n  const [blogs, setBlogs] = useState([]);\n  const [username, setUsername] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [user, setUser] = useState(null);\n\n  const [notification, setNotification] = useState(null);\n\n  // const [newTitle, setNewTitle] = useState(\"\");\n  // const [newAuthor, setNewAuthor] = useState(\"\");\n  // const [newUrl, setNewUrl] = useState(\"http://\");\n\n  const [visible, setVisible] = useState(false);\n\n  useEffect(() => {\n    blogService.getAll().then((blogs) => setBlogs(blogs));\n  }, []);\n\n  // rerender blog list whenever the URL field changes, i.e. when the gield is reset on submit\n  useEffect(() => {\n    blogService.getAll().then((blogs) => setBlogs(blogs));\n  }, [notification]);\n\n  useEffect(() => {\n    const loggedUserJSON = window.localStorage.getItem(\"loggedBlogAppUser\");\n    if (loggedUserJSON) {\n      const user = JSON.parse(loggedUserJSON);\n      setUser(user);\n      blogService.setToken(user.token);\n    }\n  }, []);\n\n  const handleLogin = async (event) => {\n    event.preventDefault();\n    try {\n      const user = await loginService.login({\n        username,\n        password\n      });\n\n      window.localStorage.setItem(\"loggedBlogAppUser\", JSON.stringify(user));\n\n      blogService.setToken(user.token);\n      setUser(user);\n      setNotification(\"Logged In\");\n      setTimeout(() => {\n        setNotification(null);\n      }, 5000);\n\n      setUsername(\"\");\n      setPassword(\"\");\n    } catch (exception) {\n      setNotification(\"Wrong credentials\");\n      setTimeout(() => {\n        setNotification(null);\n      }, 5000);\n    }\n  };\n\n  const handleLogout = async (event) => {\n    event.preventDefault();\n    try {\n      window.localStorage.removeItem(\"loggedBlogAppUser\");\n      setUser(null);\n      setUsername(\"\");\n      setPassword(\"\");\n    } catch (exception) {}\n  };\n\n  const addBlog = async (blogObject) => {\n    // event.preventDefault();\n    try {\n      // const blogObject = {\n      //   title: newTitle,\n      //   author: newAuthor,\n      //   url: newUrl\n      // };\n      const newBlog = await blogService.create(blogObject);\n      setBlogs([...blogs, newBlog]);\n      setNotification(`\"${blogObject.title}\" has been added`);\n      setTimeout(() => {\n        setNotification(null);\n      }, 5000);\n\n      // setNewTitle(\"\");\n      // setNewAuthor(\"\");\n      // setNewUrl(\"http://\");\n      // setVisible(false);\n    } catch (exception) {\n      setNotification(\"Error posting blog\");\n      setTimeout(() => {\n        setNotification(null);\n      }, 5000);\n    }\n  };\n\n  const welcomeUser = () => (\n    <div>\n      Welcome {user.name}\n      <form onSubmit={handleLogout}>\n        <Button\n          variant=\"outlined\"\n          color=\"secondary\"\n          type=\"submit\"\n          style={{ marginTop: 10 }}\n        >\n          Logout\n        </Button>\n      </form>\n      <br />\n    </div>\n  );\n\n  const blogList = () => (\n    <div>\n      {blogs.map((blog) => (\n        <Blog key={blog.id} blog={blog} />\n      ))}\n    </div>\n  );\n\n  return (\n    <Grid container>\n      <Grid item xs={4} style={{ textAlign: \"center\", padding: 20 }}>\n        <h2>Blogs</h2>\n        {notification !== null && <Notification notification={notification} />}\n\n        {user === null && (\n          <Login\n            handleLogin={handleLogin}\n            username={username}\n            setUsername={setUsername}\n            password={password}\n            setPassword={setPassword}\n          />\n        )}\n        {user !== null && welcomeUser()}\n        {user !== null && (\n          <Togglable\n            buttonLabel=\"Post Blog\"\n            visible={visible}\n            setVisible={setVisible}\n          >\n            <BlogForm\n              createBlog={addBlog}\n              // newTitle={newTitle}\n              // setNewTitle={setNewTitle}\n              // newAuthor={newAuthor}\n              // setNewAuthor={setNewAuthor}\n              // newUrl={newUrl}\n              // setNewUrl={setNewUrl}\n            />\n          </Togglable>\n        )}\n      </Grid>\n      <Grid item xs={8}>\n        {blogList()}\n        {/* {user !== null && <BlogTable blogs={blogs} />} */}\n      </Grid>\n    </Grid>\n  );\n};\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}