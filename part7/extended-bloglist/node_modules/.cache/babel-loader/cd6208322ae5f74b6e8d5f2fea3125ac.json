{"ast":null,"code":"var _jsxFileName = \"/Users/danielgawne/Documents/projects/fullstackopen/part5/src/App.js\";\nimport React, { useState, useEffect } from \"react\";\nimport Login from \"./components/Login\";\nimport Blog from \"./components/Blog\";\nimport NotificationAlert from \"./components/NotificationAlert\";\nimport blogService from \"./services/blogs\";\nimport loginService from \"./services/login\";\n\nconst App = () => {\n  const [blogs, setBlogs] = useState([]);\n  const [username, setUsername] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [user, setUser] = useState(null);\n  const [notification, setNotification] = useState(\"\");\n  const [newTitle, setNewTitle] = useState(\"\");\n  const [newAuthor, setNewAuthor] = useState(\"\");\n  const [newUrl, setNewUrl] = useState(\"http://\");\n  useEffect(() => {\n    blogService.getAll().then(blogs => setBlogs(blogs));\n  }, []); // rerender blog list whenever the URL field changes, i.e. when the gield is reset on submit\n\n  useEffect(() => {\n    blogService.getAll().then(blogs => setBlogs(blogs));\n  }, [newUrl]);\n  useEffect(() => {\n    const loggedUserJSON = window.localStorage.getItem(\"loggedBlogAppUser\");\n\n    if (loggedUserJSON) {\n      const user = JSON.parse(loggedUserJSON);\n      setUser(user);\n      blogService.setToken(user.token);\n    }\n  }, []);\n\n  const handleLogin = async event => {\n    event.preventDefault();\n\n    try {\n      const user = await loginService.login({\n        username,\n        password\n      });\n      window.localStorage.setItem(\"loggedBlogAppUser\", JSON.stringify(user));\n      blogService.setToken(user.token);\n      setUser(user);\n      setNotification(\"Logged In\");\n      setTimeout(() => {\n        setNotification(null);\n      }, 5000);\n      setUsername(\"\");\n      setPassword(\"\");\n    } catch (exception) {\n      setNotification(\"Wrong credentials\");\n      setTimeout(() => {\n        setNotification(null);\n      }, 5000);\n    }\n  };\n\n  const handleLogout = async event => {\n    event.preventDefault();\n\n    try {\n      window.localStorage.removeItem(\"loggedBlogAppUser\");\n      setUser(null);\n      setUsername(\"\");\n      setPassword(\"\");\n    } catch (exception) {}\n  };\n\n  const addBlog = async event => {\n    event.preventDefault();\n\n    try {\n      const blogObject = {\n        title: newTitle,\n        author: newAuthor,\n        url: newUrl\n      };\n      const newBlog = await blogService.create(blogObject);\n      setBlogs([...blogs, newBlog]);\n      setNotification(`\"${newTitle}\" has been added`);\n      setTimeout(() => {\n        setNotification(null);\n      }, 5000);\n      setNewTitle(\"\");\n      setNewAuthor(\"\");\n      setNewUrl(\"http://\");\n    } catch (exception) {\n      setNotification(\"Error posting blog\");\n      setTimeout(() => {\n        setNotification(null);\n      }, 5000);\n    }\n  };\n\n  const welcomeUser = () => /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 5\n    }\n  }, \"Welcome \", user.name, /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: handleLogout,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 9\n    }\n  }, \"Logout\")), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 7\n    }\n  }));\n\n  const blogForm = () => /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: addBlog,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 7\n    }\n  }, \"Title:\", /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    value: newTitle,\n    onChange: ({\n      target\n    }) => setNewTitle(target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 7\n    }\n  }, \"Author:\", /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    value: newAuthor,\n    onChange: ({\n      target\n    }) => setNewAuthor(target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 7\n    }\n  }, \"URL:\", /*#__PURE__*/React.createElement(\"input\", {\n    type: \"url\",\n    value: newUrl,\n    onChange: ({\n      target\n    }) => setNewUrl(target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 7\n    }\n  }, \"Submit\"), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 7\n    }\n  }));\n\n  const blogList = () => /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 5\n    }\n  }, blogs.map(blog => /*#__PURE__*/React.createElement(Blog, {\n    key: blog.id,\n    blog: blog,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 9\n    }\n  })));\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 7\n    }\n  }, \"Blogs\"), /*#__PURE__*/React.createElement(NotificationAlert, {\n    notification: notification,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 7\n    }\n  }), user === null && /*#__PURE__*/React.createElement(Login, {\n    handleLogin: handleLogin,\n    username: username,\n    setUsername: setUsername,\n    password: password,\n    setPassword: setPassword,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 9\n    }\n  }), user !== null && welcomeUser(), user !== null && blogForm(), user !== null && blogList());\n};\n\nexport default App;","map":{"version":3,"sources":["/Users/danielgawne/Documents/projects/fullstackopen/part5/src/App.js"],"names":["React","useState","useEffect","Login","Blog","NotificationAlert","blogService","loginService","App","blogs","setBlogs","username","setUsername","password","setPassword","user","setUser","notification","setNotification","newTitle","setNewTitle","newAuthor","setNewAuthor","newUrl","setNewUrl","getAll","then","loggedUserJSON","window","localStorage","getItem","JSON","parse","setToken","token","handleLogin","event","preventDefault","login","setItem","stringify","setTimeout","exception","handleLogout","removeItem","addBlog","blogObject","title","author","url","newBlog","create","welcomeUser","name","blogForm","target","value","blogList","map","blog","id"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\n\nimport Login from \"./components/Login\";\nimport Blog from \"./components/Blog\";\nimport NotificationAlert from \"./components/NotificationAlert\";\n\nimport blogService from \"./services/blogs\";\nimport loginService from \"./services/login\";\n\nconst App = () => {\n  const [blogs, setBlogs] = useState([]);\n  const [username, setUsername] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [user, setUser] = useState(null);\n\n  const [notification, setNotification] = useState(\"\");\n\n  const [newTitle, setNewTitle] = useState(\"\");\n  const [newAuthor, setNewAuthor] = useState(\"\");\n  const [newUrl, setNewUrl] = useState(\"http://\");\n\n  useEffect(() => {\n    blogService.getAll().then((blogs) => setBlogs(blogs));\n  }, []);\n\n  // rerender blog list whenever the URL field changes, i.e. when the gield is reset on submit\n  useEffect(() => {\n    blogService.getAll().then((blogs) => setBlogs(blogs));\n  }, [newUrl]);\n\n  useEffect(() => {\n    const loggedUserJSON = window.localStorage.getItem(\"loggedBlogAppUser\");\n    if (loggedUserJSON) {\n      const user = JSON.parse(loggedUserJSON);\n      setUser(user);\n      blogService.setToken(user.token);\n    }\n  }, []);\n\n  const handleLogin = async (event) => {\n    event.preventDefault();\n    try {\n      const user = await loginService.login({\n        username,\n        password\n      });\n\n      window.localStorage.setItem(\"loggedBlogAppUser\", JSON.stringify(user));\n\n      blogService.setToken(user.token);\n      setUser(user);\n      setNotification(\"Logged In\");\n      setTimeout(() => {\n        setNotification(null);\n      }, 5000);\n\n      setUsername(\"\");\n      setPassword(\"\");\n    } catch (exception) {\n      setNotification(\"Wrong credentials\");\n      setTimeout(() => {\n        setNotification(null);\n      }, 5000);\n    }\n  };\n\n  const handleLogout = async (event) => {\n    event.preventDefault();\n    try {\n      window.localStorage.removeItem(\"loggedBlogAppUser\");\n      setUser(null);\n      setUsername(\"\");\n      setPassword(\"\");\n    } catch (exception) {}\n  };\n\n  const addBlog = async (event) => {\n    event.preventDefault();\n    try {\n      const blogObject = {\n        title: newTitle,\n        author: newAuthor,\n        url: newUrl\n      };\n      const newBlog = await blogService.create(blogObject);\n      setBlogs([...blogs, newBlog]);\n      setNotification(`\"${newTitle}\" has been added`);\n      setTimeout(() => {\n        setNotification(null);\n      }, 5000);\n\n      setNewTitle(\"\");\n      setNewAuthor(\"\");\n      setNewUrl(\"http://\");\n    } catch (exception) {\n      setNotification(\"Error posting blog\");\n      setTimeout(() => {\n        setNotification(null);\n      }, 5000);\n    }\n  };\n\n  const welcomeUser = () => (\n    <div>\n      Welcome {user.name}\n      <form onSubmit={handleLogout}>\n        <button type=\"submit\">Logout</button>\n      </form>\n      <br />\n    </div>\n  );\n\n  const blogForm = () => (\n    <form onSubmit={addBlog}>\n      <div>\n        Title:\n        <input\n          type=\"text\"\n          value={newTitle}\n          onChange={({ target }) => setNewTitle(target.value)}\n        />\n      </div>\n\n      <div>\n        Author:\n        <input\n          type=\"text\"\n          value={newAuthor}\n          onChange={({ target }) => setNewAuthor(target.value)}\n        />\n      </div>\n\n      <div>\n        URL:\n        <input\n          type=\"url\"\n          value={newUrl}\n          onChange={({ target }) => setNewUrl(target.value)}\n        />\n      </div>\n\n      <button type=\"submit\">Submit</button>\n      <br />\n      <br />\n    </form>\n  );\n\n  const blogList = () => (\n    <div>\n      {blogs.map((blog) => (\n        <Blog key={blog.id} blog={blog} />\n      ))}\n    </div>\n  );\n\n  return (\n    <div>\n      <h2>Blogs</h2>\n      <NotificationAlert notification={notification} />\n\n      {user === null && (\n        <Login\n          handleLogin={handleLogin}\n          username={username}\n          setUsername={setUsername}\n          password={password}\n          setPassword={setPassword}\n        />\n      )}\n      {user !== null && welcomeUser()}\n      {user !== null && blogForm()}\n      {user !== null && blogList()}\n    </div>\n  );\n};\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}