{"ast":null,"code":"var _jsxFileName = \"/Users/danielgawne/Documents/projects/fullstackopen/part5/src/App.js\";\n// Core\nimport React, { useState, useEffect } from \"react\";\nimport \"./App.css\"; // Components\n\nimport Login from \"./components/Login\";\nimport Blog from \"./components/Blog\";\nimport Notification from \"./components/Notification\";\nimport BlogForm from \"./components/BlogForm\";\nimport BlogTable from \"./components/BlogTable\"; // Services\n\nimport blogService from \"./services/blogs\";\nimport loginService from \"./services/login\"; // Material-UI\n\nimport Button from \"@material-ui/core/Button\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableContainer from \"@material-ui/core/TableContainer\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport Paper from \"@material-ui/core/Paper\";\n\nconst App = () => {\n  const [blogs, setBlogs] = useState([]);\n  const [username, setUsername] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [user, setUser] = useState(null);\n  const [notification, setNotification] = useState(\"\");\n  const [newTitle, setNewTitle] = useState(\"\");\n  const [newAuthor, setNewAuthor] = useState(\"\");\n  const [newUrl, setNewUrl] = useState(\"http://\");\n  useEffect(() => {\n    blogService.getAll().then(blogs => setBlogs(blogs));\n  }, []); // rerender blog list whenever the URL field changes, i.e. when the gield is reset on submit\n\n  useEffect(() => {\n    blogService.getAll().then(blogs => setBlogs(blogs));\n  }, [newUrl]);\n  useEffect(() => {\n    const loggedUserJSON = window.localStorage.getItem(\"loggedBlogAppUser\");\n\n    if (loggedUserJSON) {\n      const user = JSON.parse(loggedUserJSON);\n      setUser(user);\n      blogService.setToken(user.token);\n    }\n  }, []);\n\n  const handleLogin = async event => {\n    event.preventDefault();\n\n    try {\n      const user = await loginService.login({\n        username,\n        password\n      });\n      window.localStorage.setItem(\"loggedBlogAppUser\", JSON.stringify(user));\n      blogService.setToken(user.token);\n      setUser(user);\n      setNotification(\"Logged In\");\n      setTimeout(() => {\n        setNotification(null);\n      }, 5000);\n      setUsername(\"\");\n      setPassword(\"\");\n    } catch (exception) {\n      setNotification(\"Wrong credentials\");\n      setTimeout(() => {\n        setNotification(null);\n      }, 5000);\n    }\n  };\n\n  const handleLogout = async event => {\n    event.preventDefault();\n\n    try {\n      window.localStorage.removeItem(\"loggedBlogAppUser\");\n      setUser(null);\n      setUsername(\"\");\n      setPassword(\"\");\n    } catch (exception) {}\n  };\n\n  const addBlog = async event => {\n    event.preventDefault();\n\n    try {\n      const blogObject = {\n        title: newTitle,\n        author: newAuthor,\n        url: newUrl\n      };\n      const newBlog = await blogService.create(blogObject);\n      setBlogs([...blogs, newBlog]);\n      setNotification(`\"${newTitle}\" has been added`);\n      setTimeout(() => {\n        setNotification(null);\n      }, 5000);\n      setNewTitle(\"\");\n      setNewAuthor(\"\");\n      setNewUrl(\"http://\");\n    } catch (exception) {\n      setNotification(\"Error posting blog\");\n      setTimeout(() => {\n        setNotification(null);\n      }, 5000);\n    }\n  };\n\n  const welcomeUser = () => /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 5\n    }\n  }, \"Welcome \", user.name, /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: handleLogout,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    variant: \"outlined\",\n    color: \"secondary\",\n    type: \"submit\",\n    style: {\n      marginTop: 10\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 9\n    }\n  }, \"Logout\")), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 7\n    }\n  }));\n\n  const blogList = () => /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 5\n    }\n  }, blogs.map(blog => /*#__PURE__*/React.createElement(Blog, {\n    key: blog.id,\n    blog: blog,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 9\n    }\n  })));\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 7\n    }\n  }, \"Blogs\"), /*#__PURE__*/React.createElement(Notification, {\n    notification: notification,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 7\n    }\n  }), user === null && /*#__PURE__*/React.createElement(Login, {\n    handleLogin: handleLogin,\n    username: username,\n    setUsername: setUsername,\n    password: password,\n    setPassword: setPassword,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 9\n    }\n  }), user !== null && welcomeUser(), user !== null && /*#__PURE__*/React.createElement(BlogForm, {\n    addBlog: addBlog,\n    newTitle: newTitle,\n    setNewTitle: setNewTitle,\n    newAuthor: newAuthor,\n    setNewAuthor: setNewAuthor,\n    newUrl: newUrl,\n    setNewUrl: setNewUrl,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 9\n    }\n  }), user !== null && /*#__PURE__*/React.createElement(BlogTable, {\n    blogs: blogs,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 25\n    }\n  }));\n};\n\nexport default App;","map":{"version":3,"sources":["/Users/danielgawne/Documents/projects/fullstackopen/part5/src/App.js"],"names":["React","useState","useEffect","Login","Blog","Notification","BlogForm","BlogTable","blogService","loginService","Button","Table","TableBody","TableCell","TableContainer","TableHead","TableRow","Paper","App","blogs","setBlogs","username","setUsername","password","setPassword","user","setUser","notification","setNotification","newTitle","setNewTitle","newAuthor","setNewAuthor","newUrl","setNewUrl","getAll","then","loggedUserJSON","window","localStorage","getItem","JSON","parse","setToken","token","handleLogin","event","preventDefault","login","setItem","stringify","setTimeout","exception","handleLogout","removeItem","addBlog","blogObject","title","author","url","newBlog","create","welcomeUser","name","marginTop","blogList","map","blog","id"],"mappings":"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","sourcesContent":["// Core\nimport React, { useState, useEffect } from \"react\";\nimport \"./App.css\";\n\n// Components\nimport Login from \"./components/Login\";\nimport Blog from \"./components/Blog\";\nimport Notification from \"./components/Notification\";\nimport BlogForm from \"./components/BlogForm\";\nimport BlogTable from \"./components/BlogTable\";\n\n// Services\nimport blogService from \"./services/blogs\";\nimport loginService from \"./services/login\";\n\n// Material-UI\nimport Button from \"@material-ui/core/Button\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableContainer from \"@material-ui/core/TableContainer\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport Paper from \"@material-ui/core/Paper\";\n\nconst App = () => {\n  const [blogs, setBlogs] = useState([]);\n  const [username, setUsername] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [user, setUser] = useState(null);\n\n  const [notification, setNotification] = useState(\"\");\n\n  const [newTitle, setNewTitle] = useState(\"\");\n  const [newAuthor, setNewAuthor] = useState(\"\");\n  const [newUrl, setNewUrl] = useState(\"http://\");\n\n  useEffect(() => {\n    blogService.getAll().then((blogs) => setBlogs(blogs));\n  }, []);\n\n  // rerender blog list whenever the URL field changes, i.e. when the gield is reset on submit\n  useEffect(() => {\n    blogService.getAll().then((blogs) => setBlogs(blogs));\n  }, [newUrl]);\n\n  useEffect(() => {\n    const loggedUserJSON = window.localStorage.getItem(\"loggedBlogAppUser\");\n    if (loggedUserJSON) {\n      const user = JSON.parse(loggedUserJSON);\n      setUser(user);\n      blogService.setToken(user.token);\n    }\n  }, []);\n\n  const handleLogin = async (event) => {\n    event.preventDefault();\n    try {\n      const user = await loginService.login({\n        username,\n        password\n      });\n\n      window.localStorage.setItem(\"loggedBlogAppUser\", JSON.stringify(user));\n\n      blogService.setToken(user.token);\n      setUser(user);\n      setNotification(\"Logged In\");\n      setTimeout(() => {\n        setNotification(null);\n      }, 5000);\n\n      setUsername(\"\");\n      setPassword(\"\");\n    } catch (exception) {\n      setNotification(\"Wrong credentials\");\n      setTimeout(() => {\n        setNotification(null);\n      }, 5000);\n    }\n  };\n\n  const handleLogout = async (event) => {\n    event.preventDefault();\n    try {\n      window.localStorage.removeItem(\"loggedBlogAppUser\");\n      setUser(null);\n      setUsername(\"\");\n      setPassword(\"\");\n    } catch (exception) {}\n  };\n\n  const addBlog = async (event) => {\n    event.preventDefault();\n    try {\n      const blogObject = {\n        title: newTitle,\n        author: newAuthor,\n        url: newUrl\n      };\n      const newBlog = await blogService.create(blogObject);\n      setBlogs([...blogs, newBlog]);\n      setNotification(`\"${newTitle}\" has been added`);\n      setTimeout(() => {\n        setNotification(null);\n      }, 5000);\n\n      setNewTitle(\"\");\n      setNewAuthor(\"\");\n      setNewUrl(\"http://\");\n    } catch (exception) {\n      setNotification(\"Error posting blog\");\n      setTimeout(() => {\n        setNotification(null);\n      }, 5000);\n    }\n  };\n\n  const welcomeUser = () => (\n    <div>\n      Welcome {user.name}\n      <form onSubmit={handleLogout}>\n        <Button\n          variant=\"outlined\"\n          color=\"secondary\"\n          type=\"submit\"\n          style={{ marginTop: 10 }}\n        >\n          Logout\n        </Button>\n      </form>\n      <br />\n    </div>\n  );\n\n  const blogList = () => (\n    <div>\n      {blogs.map((blog) => (\n        <Blog key={blog.id} blog={blog} />\n      ))}\n    </div>\n  );\n\n  return (\n    <div>\n      <h2>Blogs</h2>\n      <Notification notification={notification} />\n\n      {user === null && (\n        <Login\n          handleLogin={handleLogin}\n          username={username}\n          setUsername={setUsername}\n          password={password}\n          setPassword={setPassword}\n        />\n      )}\n      {user !== null && welcomeUser()}\n      {user !== null && (\n        <BlogForm\n          addBlog={addBlog}\n          newTitle={newTitle}\n          setNewTitle={setNewTitle}\n          newAuthor={newAuthor}\n          setNewAuthor={setNewAuthor}\n          newUrl={newUrl}\n          setNewUrl={setNewUrl}\n        />\n      )}\n      {user !== null && <BlogTable blogs={blogs} />}\n      {/* {user !== null && blogList()} */}\n    </div>\n  );\n};\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}